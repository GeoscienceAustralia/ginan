# Basic network processing, estimates station positions, tropospheric delays for stations in the network
# It also estimates satellite clocks and code biases for GPS and GAL  
# Warning: options for contraining the station positions are incomplete, 
# Warning: for POST-MISSION processing we recommend setting:    processing_options:filter_options:rts:enable:true
# Warning: for REAL-TIME processing we recommend setting:       processing_options:minimum_constraints:once_per_epoch:true

outputs:
    root_directory:         outputs/<CONFIG>/
    sinex:
        output:                     true
        filename:                   GAA0GINRAP_<YYYY><DDD>0000_01D_01D_CRD.SNX
    erp:
        output:                     true
        filename:                   GAA0GINRAP_<YYYY><DDD>0000_01D_01D_ERP.ERP
    trop_sinex:
        output:                     true
    clocks:
        output:                     true
        filename:                   GAA0GINRAP_<YYYY><DDD>0000_01D_30S_CLK.CLK
        satellite_sources:			[KALMAN]
        receiver_sources:			[NONE]
    bias_sinex:
        output:                     true        
        filename:                   GAA0GINRAP_<YYYY><DDD>0000_01D_15M_OSB.BIA
        code_output_interval:       86400.0
        output_rec_bias:            false

estimation_parameters:
    stations:
        global:
            pos:
                estimated:          [true]
                sigma:              [1]
                proc_noise:         [0]
            clk:
                estimated:          [true]
                sigma:              [1000]
                proc_noise:         [10]
            amb:
                estimated:          [true]
                sigma:              [100]
                proc_noise:         [0]
            trop:
                estimated:          [true]
                sigma:              [0.3]
                proc_noise:         [0.0001]
            trop_grads:
                estimated:          [true]
                sigma:              [0.03]
                proc_noise:         [1.0E-6]
            ion_stec:
                estimated:          [true]
                sigma:              [100]
                proc_noise:         [2]
            code_bias:
                estimated:          [true]
                sigma:              [20]
                proc_noise:         [0]
        USN7:                                       # Signals on USN7: GPS L1W, L1C, L2W, L2L, L5Q; GAL L1C, L5Q, L7Q; GLO L1C, L1P, L2C, L2P; BDS L2I, L7I, L6I
            clk:
                estimated:          [false]
            code_bias:
                estimated:          [false]
        CUSV:                                       # Signals on CUSV: GPS L1W, L1C, L2W, L2X, L5X; GAL L1X, L5X, L7X; GLO L1C, L1P, L2C, L2P; BDS L2I, L7I, L6I; QZS L1C, L2X, L5X
            GAL:
                L1X:
                    code_bias:
                        estimated:  [false]
                L5X:
                    code_bias:
                        estimated:  [false]
    satellites:
        global:
            clk:
                estimated:          [true]
                sigma:              [1000]
                proc_noise:         [1]

            clk_rate:
                estimated:          [true]
                sigma:              [10]
                proc_noise:         [1e-9]

            code_bias:
                estimated:          [true]
                sigma:              [10]
                proc_noise:         [0]
        GPS:
            L1W:
                code_bias:
                    sigma:              [1e-8]      # this implements B(s,GPS-L1W)=0 
                    process_noise:      [0]
                    apriori_value:      [0]
            L2W:
                code_bias:
                    sigma:              [1e-8]      # this implements B(s,GPS-L2W)=0 
                    process_noise:      [0]
                    apriori_value:      [0]            
        GAL:
            L1C:
                code_bias:
                    sigma:              [1e-8]      # this implements B(s,GPS-L1W)=0 
                    process_noise:      [0]
                    apriori_value:      [0]
            L5Q:
                code_bias:
                    sigma:              [1e-8]      # this implements B(s,GPS-L2W)=0 
                    process_noise:      [0]
                    apriori_value:      [0] 
    eop:
        estimated:  [true]
        sigma:      [10]

    eop_rates:
        estimated:  [true]
        sigma:      [10]

processing_options:
    process_modes:
        ppp:                        true
        
    epoch_control:
        wait_all_stations:          1
        fatal_message_level:        1

    gnss_general:
        require_antenna_details:        true    # (bool)
        rec_reference_system:           gps
        sys_options:
            gps:
                process:                true
                reject_eclipse:         false
                zero_receiver_dcb:      true
                code_priorities:        [ L1W, L2W, L1C ]
            gal:
                process:                true
                reject_eclipse:         false
                zero_receiver_dcb:      true
                zero_satellite_dcb:     true
                
                code_priorities:        [ L1C, L5Q, L1X, L5X ]

    gnss_models:
        troposphere:
            model:              gpt2
        ionospheric_component2:                              
            enable:             true
        ionospheric_component3:                              
            enable:             true

    model_error_checking:
        deweighting:
            deweight_factor:            10000
        ambiguities:
            outage_reset_limit:          5
            phase_reject_limit:          2
            reinit_on_all_slips:         true     # (bool) Any detected slips cause removal and reinitialisation of ambiguities

    filter_options:
        outlier_screening:
            max_filter_iterations:      20
            max_prefit_removals:        3
            sigma_check:                true    

    minimum_constraints:
        enable:                         true
        once_per_epoch:                 false            # (bool) Perform minimum constraints on a temporary filter and output results once per epoch
        translation:
            estimated:                  [true]
        rotation:
            estimated:                  [true]
        scale:
            estimated:                  [false]
        inverter:                       LDLT
        max_filter_iterations:          20
        max_prefit_removals:            3              # (int) Maximum number of measurements to exclude using prefit checks before attempting to filter
        outlier_screening:
            chi_square_mode:            none             # (enum)  Chi-square test mode - innovation, measurement, state {NONE,INNOVATION,MEASUREMENT,STATE}
            chi_square_test:            false            # (bool)  Enable Chi-square test
            sigma_check:                true             # (bool)  Enable prefit and postfit sigma check
            sigma_threshold:            3.000000         # (float) sigma threshold
            w_test:                     false            # (bool)  Enable w-test
        station_noise:
            global:                     [0.005, 0.005, 0.01]
